{{- $fullName := include "pgadmin.fullname" . -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "pgadmin.labels" . | nindent 4 }}
spec:
  replicas: 1 
  selector:
    matchLabels:
      {{- include "pgadmin.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "pgadmin.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:

      initContainers:
        - name: prepare-nfs-dirs
          image: busybox:1.35.0
          imagePullPolicy: IfNotPresent
          command:
            - /bin/sh
            - -c
            - cp /scripts/init.sh /scripts-w/init.sh && chmod +x /scripts-w/init.sh && /bin/sh /scripts-w/init.sh '{{ $fullName }}'
          {{- if and .Values.storage.nfs.hostname .Values.storage.nfs.path }}
          volumeMounts:
            - name: vol-{{ $fullName }}-nfs
              mountPath: /tmp_mount
            - name: vol-configs
              mountPath: /scripts/init.sh
              subPath: init.sh
              readOnly: false
            - name: vol-empty-tmp
              mountPath: /scripts-w
          {{- end }}

      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.pgadmin.repository }}:{{ .Values.image.pgadmin.tag }}"
          imagePullPolicy: {{ .Values.image.pgadmin.pullPolicy }}

          env:
            # USER VARS
            - name: PGADMIN_DEFAULT_EMAIL
              value: {{ .Values.envVars.pgadmin.adminEmail }}
            - name: PGADMIN_DEFAULT_PASSWORD
              value: {{ .Values.envVars.pgadmin.adminPass }}
            - name: PGADMIN_MAX_LOGIN_ATTEMPTS
              value: "{{ .Values.envVars.pgadmin.maxLoginAttempts }}"

            {{- if .Values.envVars.pgadmin.configureMail }}
            # MAIL VARS
            - name: PGADMIN_CONFIG_MAIL_SERVER
              value: {{ .Values.envVars.pgadmin.mailServer }}
            - name: PGADMIN_CONFIG_MAIL_PORT
              value: "{{ .Values.envVars.pgadmin.mailPort }}"
            - name: PGADMIN_CONFIG_MAIL_USE_SSL
              value: {{ .Values.envVars.pgadmin.mailUseSSL }}
            - name: PGADMIN_CONFIG_MAIL_USE_TLS
              value: {{ .Values.envVars.pgadmin.mailUseTLS }}
            {{- end }}

          resources:
            {{- toYaml .Values.resources | nindent 12 }}

          {{- if and .Values.storage.nfs.hostname .Values.storage.nfs.path }}
          volumeMounts:
            - mountPath: /var/lib/pgadmin 
              name: vol-{{ $fullName }}-nfs
              subPath: {{ $fullName }}/pgadmin
          {{- end }}

      {{- if and .Values.storage.nfs.hostname .Values.storage.nfs.path }}
      volumes:
        - name: vol-{{ $fullName }}-nfs
          nfs:
            server: {{ .Values.storage.nfs.hostname }}
            path: {{ .Values.storage.nfs.path }}
        - name: vol-configs
          configMap:
            name: {{ $fullName }}-configs
        - name: vol-empty-tmp
          emptyDir: {}
      {{- end }}

      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
